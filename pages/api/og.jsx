import { ImageResponse } from '@vercel/og';
import { NextRequest } from 'next/server';
 
export const config = {
  runtime: 'edge',
};
 
export default function handler(request) {
  try {
    const { searchParams } = new URL(request.url);

    const example_params = 'ccd5ae-e9edc9-fefae0-faedcd-d4a373';

    //pars params from url into hex codes for colors
    const hasColors = searchParams.has('colors');
    const colors = hasColors ? searchParams.get('colors')?.slice(0, 100) : example_params;
    const colors_array = colors.split('-');

    //add # to hex codes
    const colors_array_with_hash = colors_array.map((color) => '#' + color);
    
    //determine width of bar based on number of colors
    const bar_width = 1200 / colors_array.length;
 
 
    return new ImageResponse(
      (
        <div
          style={{
            backgroundColor: 'white',
            backgroundSize: '150px 150px',
            height: '100%',
            width: '100%',
            display: 'flex',
            
            flexDirection: 'column',
          }}
        >
          <div
            style={{
              display: 'flex',
              paddingTop: '20px',
              height: '30%',
                paddingLeft: '20px',
                backgroundColor:'white',
                alignItems:'center',
            justifyContent:'center',

            }}
          >
            <svg width="339" height="67" viewBox="0 0 339 67" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M0.441563 47V1.758H17.6523V18.5001L14.7128 16.1997C15.1388 13.7856 15.8062 11.6272 16.7151 9.72434C17.6239 7.82151 18.7599 6.21688 20.1231 4.91045C21.5147 3.57563 23.1052 2.56741 24.8944 1.8858C26.712 1.17579 28.7285 0.820778 30.9437 0.820778C32.7897 0.820778 34.1814 0.948581 35.1186 1.20419C36.0842 1.43139 36.6806 1.616 36.9078 1.758L34.5648 16.7535C34.3092 16.6115 33.7412 16.3985 32.8607 16.1145C31.9803 15.802 30.9153 15.6458 29.6657 15.6458C27.4504 15.6458 25.576 16.0008 24.0424 16.7109C22.5088 17.3925 21.2733 18.3297 20.3361 19.5225C19.3989 20.6869 18.7173 22.0076 18.2913 23.4844C17.8653 24.9328 17.6523 26.4096 17.6523 27.9149V47H0.441563ZM52.3958 48.0224C49.1582 48.0224 46.2613 47.5112 43.7053 46.4888C41.1492 45.438 39.1328 43.9327 37.656 41.9731C36.1792 39.9851 35.4407 37.571 35.4407 34.731C35.4407 31.3797 36.3922 28.6817 38.295 26.6368C40.2262 24.592 42.6829 23.0442 45.6649 21.9934C48.6754 20.9425 51.7852 20.2751 54.9945 19.9911C59.567 19.5651 62.6484 19.1959 64.2389 18.8835C65.8293 18.5711 66.6245 18.0173 66.6245 17.2221C66.6245 17.1937 66.6245 17.1795 66.6245 17.1795C66.6245 16.1287 65.9855 15.234 64.7075 14.4956C63.4578 13.7288 61.7822 13.3454 59.6806 13.3454C57.4085 13.3454 55.7187 13.7714 54.6111 14.6234C53.5035 15.447 52.9497 16.6541 52.9497 18.2445H36.0372C36.0372 14.4388 37.1022 11.2438 39.2322 8.65932C41.3622 6.07487 44.2165 4.12944 47.795 2.82302C51.4018 1.48819 55.4063 0.820778 59.8084 0.820778C63.9833 0.820778 67.8883 1.44559 71.5236 2.69521C75.1872 3.94484 78.1551 5.86187 80.4271 8.44632C82.6992 11.0024 83.8352 14.2826 83.8352 18.2871C83.8352 18.8835 83.8352 19.4799 83.8352 20.0763C83.8352 20.6727 83.8352 21.2691 83.8352 21.8656V35.8812C83.8352 37.1308 83.8636 38.3378 83.9204 39.5023C83.9772 40.6667 84.1476 41.7459 84.4316 42.7399C84.744 43.7907 85.1558 44.6996 85.667 45.4664C86.1782 46.2048 86.5901 46.716 86.9025 47H70.1178C69.8622 46.7444 69.4929 46.2758 69.0101 45.5942C68.5273 44.9126 68.1297 44.1315 67.8173 43.2511C67.3913 41.9731 67.0789 40.7803 66.8801 39.6727C66.7097 38.5366 66.6245 37.1592 66.6245 35.5404L70.3734 38.139C69.6066 40.2123 68.3001 41.9873 66.4541 43.4641C64.6365 44.941 62.4922 46.077 60.0214 46.8722C57.5789 47.639 55.0371 48.0224 52.3958 48.0224ZM57.5079 35.8386C58.9848 35.8386 60.4332 35.512 61.8532 34.8588C63.3016 34.2056 64.5087 33.1264 65.4743 31.6211C66.4399 30.0875 66.9227 28.0143 66.9227 25.4014V23.7826L71.3106 27.3185C69.4361 27.9717 67.3487 28.5255 65.0483 28.9799C62.7478 29.4059 60.5468 29.7325 58.4452 29.9597C56.4855 30.1585 55.0229 30.4851 54.0573 30.9395C53.1201 31.3655 52.6514 32.0613 52.6514 33.027C52.6514 33.9926 53.0775 34.7026 53.9295 35.157C54.7815 35.6114 55.9743 35.8386 57.5079 35.8386ZM118.736 47V29.4059C118.736 28.4971 118.736 27.5883 118.736 26.6794C118.736 25.7706 118.736 24.9896 118.736 24.3364C118.736 22.7744 118.594 21.2833 118.31 19.8633C118.054 18.4433 117.444 17.2789 116.478 16.3701C115.541 15.4612 114.036 15.0068 111.962 15.0068C110.173 15.0068 108.725 15.376 107.617 16.1145C106.509 16.8529 105.7 17.9179 105.189 19.3095C104.678 20.7011 104.422 22.3768 104.422 24.3364L101.099 20.9283C101.099 16.7819 101.937 13.2176 103.613 10.2355C105.288 7.22509 107.574 4.91045 110.471 3.29163C113.368 1.64439 116.634 0.820778 120.269 0.820778C124.132 0.820778 127.199 1.61599 129.471 3.20643C131.743 4.76845 133.376 6.94109 134.37 9.72434C135.393 12.5076 135.904 15.6884 135.904 19.2669C135.904 20.8289 135.904 22.6182 135.904 24.6346C135.904 26.651 135.904 28.7811 135.904 31.0247V47H118.736ZM87.2539 47V1.758H104.422V47H87.2539ZM172.073 39.9283C175.084 40.2691 177.711 40.8513 179.954 41.6749C182.198 42.4985 183.945 43.7339 185.194 45.3812C186.444 47 187.069 49.201 187.069 51.9843C187.069 55.2219 186.004 57.9342 183.874 60.121C181.772 62.3079 178.762 63.9551 174.842 65.0627C170.952 66.1703 166.322 66.7242 160.955 66.7242C152.832 66.7242 146.442 65.5597 141.784 63.2309C137.155 60.9304 134.84 57.8632 134.84 54.0291C134.84 53.0635 134.954 52.1689 135.181 51.3453C135.408 50.5217 135.721 49.7974 136.118 49.1726L151.497 51.3879C151.412 51.5015 151.313 51.6861 151.199 51.9417C151.085 52.2257 151.029 52.6091 151.029 53.0919C151.029 54.0859 152.051 54.8811 154.096 55.4776C156.141 56.074 158.555 56.3722 161.338 56.3722C163.212 56.3722 164.888 56.2302 166.365 55.9462C167.842 55.6906 169.006 55.3071 169.858 54.7959C170.71 54.2847 171.136 53.7025 171.136 53.0493C171.136 52.1405 170.625 51.4873 169.602 51.0897C168.58 50.7205 167.472 50.4649 166.28 50.3229L149.197 48.278C145.845 47.8804 143.048 46.9574 140.804 45.509C138.561 44.0321 137.439 41.8879 137.439 39.0763C137.439 37.3438 137.95 35.796 138.973 34.4328C139.995 33.0412 141.145 31.9051 142.423 31.0247C143.73 30.1159 144.78 29.5337 145.576 29.2781L152.988 33.24C152.562 33.2968 152.094 33.5382 151.582 33.9642C151.1 34.3618 150.858 34.8446 150.858 35.4126C150.858 36.0374 151.242 36.5912 152.008 37.074C152.804 37.5568 154.195 37.9118 156.183 38.139L172.073 39.9283ZM175.354 1.758H190.221L184.215 18.8835C183.079 22.1496 181.602 25.0322 179.784 27.5315C177.966 30.0307 175.595 31.9903 172.67 33.4104C169.744 34.802 165.996 35.4978 161.423 35.4978C156.623 35.4978 152.434 34.8446 148.856 33.5382C145.277 32.2033 142.508 30.2721 140.549 27.7445C138.589 25.1884 137.609 22.107 137.609 18.5001C137.609 14.8648 138.589 11.7266 140.549 9.08533C142.537 6.44408 145.221 4.41345 148.6 2.99342C151.98 1.54499 155.771 0.820778 159.975 0.820778C162.815 0.820778 165.499 1.26099 168.026 2.1414C170.582 2.99342 172.656 4.18624 174.246 5.71987C175.865 7.2535 176.674 9.05693 176.674 11.1302L174.459 12.0674L175.354 1.758ZM161.338 23.6548C162.644 23.6548 163.809 23.456 164.831 23.0584C165.882 22.6324 166.706 22.0218 167.302 21.2265C167.927 20.4313 168.239 19.4657 168.239 18.3297C168.239 17.1653 167.927 16.1997 167.302 15.4328C166.706 14.6376 165.882 14.0412 164.831 13.6436C163.809 13.246 162.644 13.0472 161.338 13.0472C160.06 13.0472 158.896 13.246 157.845 13.6436C156.794 14.0412 155.956 14.6376 155.331 15.4328C154.706 16.2281 154.394 17.2221 154.394 18.4149C154.394 19.5509 154.706 20.5165 155.331 21.3117C155.956 22.0786 156.794 22.6608 157.845 23.0584C158.896 23.456 160.06 23.6548 161.338 23.6548ZM195.112 29.0651V18.8409H221.78L220.502 21.0561C220.502 20.8289 220.502 20.5875 220.502 20.3319C220.502 20.0479 220.502 19.8065 220.502 19.6077C220.502 18.6421 220.218 17.6481 219.65 16.6257C219.111 15.5748 218.216 14.6944 216.967 13.9844C215.745 13.2744 214.098 12.9194 212.025 12.9194C210.008 12.9194 208.319 13.3454 206.955 14.1974C205.592 15.0494 204.57 16.3133 203.888 17.9889C203.207 19.6361 202.866 21.6526 202.866 24.0382C202.866 26.5374 203.192 28.6675 203.846 30.4283C204.499 32.1891 205.535 33.5382 206.955 34.4754C208.375 35.3842 210.236 35.8386 212.536 35.8386C213.899 35.8386 215.064 35.7392 216.029 35.5404C216.995 35.3416 217.762 35.086 218.33 34.7736C218.926 34.4612 219.366 34.1204 219.65 33.7512C219.963 33.382 220.147 33.027 220.204 32.6861H237.159C236.961 34.6742 236.236 36.5912 234.987 38.4372C233.765 40.2833 232.076 41.9447 229.917 43.4215C227.759 44.87 225.16 46.0202 222.121 46.8722C219.082 47.6958 215.646 48.1076 211.812 48.1076C206.501 48.1076 201.9 47.1136 198.009 45.1256C194.118 43.1091 191.122 40.3259 189.02 36.7758C186.919 33.1974 185.868 29.0935 185.868 24.4642C185.868 19.7213 186.947 15.5748 189.106 12.0248C191.264 8.47472 194.289 5.71987 198.18 3.76023C202.099 1.8006 206.643 0.820778 211.812 0.820778C217.151 0.820778 221.752 1.829 225.614 3.84544C229.505 5.83347 232.502 8.67352 234.603 12.3656C236.705 16.0293 237.756 20.3887 237.756 25.444C237.756 26.296 237.742 27.0202 237.713 27.6167C237.685 28.2131 237.642 28.6959 237.585 29.0651H195.112ZM246.173 29.0651V18.8409H272.841L271.563 21.0561C271.563 20.8289 271.563 20.5875 271.563 20.3319C271.563 20.0479 271.563 19.8065 271.563 19.6077C271.563 18.6421 271.279 17.6481 270.711 16.6257C270.172 15.5748 269.277 14.6944 268.028 13.9844C266.806 13.2744 265.159 12.9194 263.086 12.9194C261.069 12.9194 259.38 13.3454 258.016 14.1974C256.653 15.0494 255.631 16.3133 254.949 17.9889C254.268 19.6361 253.927 21.6526 253.927 24.0382C253.927 26.5374 254.253 28.6675 254.907 30.4283C255.56 32.1891 256.596 33.5382 258.016 34.4754C259.436 35.3842 261.297 35.8386 263.597 35.8386C264.96 35.8386 266.125 35.7392 267.09 35.5404C268.056 35.3416 268.823 35.086 269.391 34.7736C269.987 34.4612 270.427 34.1204 270.711 33.7512C271.024 33.382 271.208 33.027 271.265 32.6861H288.22C288.022 34.6742 287.297 36.5912 286.048 38.4372C284.826 40.2833 283.137 41.9447 280.978 43.4215C278.82 44.87 276.221 46.0202 273.182 46.8722C270.143 47.6958 266.707 48.1076 262.873 48.1076C257.562 48.1076 252.961 47.1136 249.07 45.1256C245.179 43.1091 242.183 40.3259 240.081 36.7758C237.98 33.1974 236.929 29.0935 236.929 24.4642C236.929 19.7213 238.008 15.5748 240.167 12.0248C242.325 8.47472 245.35 5.71987 249.241 3.76023C253.16 1.8006 257.704 0.820778 262.873 0.820778C268.212 0.820778 272.813 1.829 276.676 3.84544C280.566 5.83347 283.563 8.67352 285.664 12.3656C287.766 16.0293 288.817 20.3887 288.817 25.444C288.817 26.296 288.803 27.0202 288.774 27.6167C288.746 28.2131 288.703 28.6959 288.646 29.0651H246.173ZM321.815 47V29.4059C321.815 28.4971 321.815 27.5883 321.815 26.6794C321.815 25.7706 321.815 24.9896 321.815 24.3364C321.815 22.7744 321.673 21.2833 321.389 19.8633C321.133 18.4433 320.523 17.2789 319.557 16.3701C318.62 15.4612 317.115 15.0068 315.041 15.0068C313.252 15.0068 311.804 15.376 310.696 16.1145C309.589 16.8529 308.779 17.9179 308.268 19.3095C307.757 20.7011 307.501 22.3768 307.501 24.3364L304.178 20.9283C304.178 16.7819 305.016 13.2176 306.692 10.2355C308.367 7.22509 310.654 4.91045 313.55 3.29163C316.447 1.64439 319.713 0.820778 323.349 0.820778C327.211 0.820778 330.278 1.61599 332.55 3.20643C334.822 4.76845 336.455 6.94109 337.449 9.72434C338.472 12.5076 338.983 15.6884 338.983 19.2669C338.983 20.8289 338.983 22.6182 338.983 24.6346C338.983 26.651 338.983 28.7811 338.983 31.0247V47H321.815ZM290.333 47V1.758H307.501V47H290.333Z" fill="black"/>
</svg>

          </div>
          <div
            style={{
              fontSize: 60,
              fontStyle: 'normal',
              display: 'flex',
              color: 'white',
              flexDirection: 'row',
              height: '70%',
            }}
          >
            {
                colors_array_with_hash.map((color, index) => {
                    return (
                        <div
                            style={{
                                display: 'flex',
                                backgroundColor: color,
                                height: '100%',
                                width: `${bar_width}px`,
                                color: 'none',
                            }}
                         key={index}>
                            {color}
                        </div>
                    )
                })
            }
          </div>
        </div>
      ),
      {
        width: 1200,
        height: 630,
      },
    );
  } catch (e) {
    console.log(`${e.message}`);
    return new Response(`Failed to generate the image`, {
      status: 500,
    });
  }
}